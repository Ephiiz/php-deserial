    Checking php-deserial v0.1.0 (/home/taylor/dev/Rust/php-deserial)
error[E0432]: unresolved import `crate::php::serialize`
 --> src/main.rs:6:5
  |
6 | use crate::php::serialize;
  |     ^^^^^^^^^^^^^^^^^^^^^ no `serialize` in `php`

warning: unused import: `std::any::Any`
 --> src/main.rs:1:5
  |
1 | use std::any::Any;
  |     ^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `info`
 --> src/main.rs:3:15
  |
3 | use tracing::{info, Level};
  |               ^^^^

warning: unused import: `any::Any`
 --> src/php.rs:1:11
  |
1 | use std::{any::Any, rc::Rc};
  |           ^^^^^^^^

warning: unused imports: `IResult`, `alpha0`, `anychar`, `char`, `combinator::map_res`, `digit1`, `is_a`, `is_alphanumeric`, `multi::length_count`, `not_line_ending`, `one_of`, `preceded`, `take_till1`, `take_till`, `take_while`, `take`, `tuple`
 --> src/php.rs:3:34
  |
3 | ...g, take, take_till, take_till1, is_a, take_while}, IResult, character::{complete::{char, digit1, anychar, alpha0, not_line_ending, one_of, alphanumeric0}, is_alphanumeric}, sequence::{preceded, separated_pair, delimited, tuple}, multi::length_count, combinator::map_re...
  |       ^^^^  ^^^^^^^^^  ^^^^^^^^^^  ^^^^  ^^^^^^^^^^   ^^^^^^^                         ^^^^  ^^^^^^  ^^^^^^^  ^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^                  ^^^^^^^^^^^^^^^              ^^^^^^^^                             ^^^^^   ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug`, `info`
 --> src/php.rs:4:15
  |
4 | use tracing::{debug, info};
  |               ^^^^^  ^^^^

error[E0283]: type annotations needed
   --> src/php.rs:34:17
    |
31  |         separated_pair(
    |         -------------- type must be known at this point
...
34  |                 alphanumeric0::<_, _>, 
    |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
    |
    = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
            - impl<I> nom::error::ParseError<I> for ();
            - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
            - impl<I> nom::error::ParseError<I> for VerboseError<I>;
            - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `separated_pair`
   --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:133:41
    |
133 | pub fn separated_pair<I, O1, O2, O3, E: ParseError<I>, F, G, H>(
    |                                         ^^^^^^^^^^^^^ required by this bound in `separated_pair`

error[E0283]: type annotations needed
   --> src/php.rs:34:17
    |
32  |             delimited(
    |             --------- type must be known at this point
33  |                 tag("s:"),
34  |                 alphanumeric0::<_, _>, 
    |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
    |
    = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
            - impl<I> nom::error::ParseError<I> for ();
            - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
            - impl<I> nom::error::ParseError<I> for VerboseError<I>;
            - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `nom::sequence::delimited`
   --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:172:36
    |
172 | pub fn delimited<I, O1, O2, O3, E: ParseError<I>, F, G, H>(
    |                                    ^^^^^^^^^^^^^ required by this bound in `delimited`

error[E0283]: type annotations needed
  --> src/php.rs:34:17
   |
33 |                 tag("s:"),
   |                 --- type must be known at this point
34 |                 alphanumeric0::<_, _>, 
   |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
   |
   = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
           - impl<I> nom::error::ParseError<I> for ();
           - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
           - impl<I> nom::error::ParseError<I> for VerboseError<I>;
           - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `nom::bytes::complete::tag`
  --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/bytes/complete.rs:32:29
   |
32 | pub fn tag<T, Input, Error: ParseError<Input>>(
   |                             ^^^^^^^^^^^^^^^^^ required by this bound in `tag`

error[E0283]: type annotations needed
   --> src/php.rs:34:17
    |
34  |                 alphanumeric0::<_, _>, 
    |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
    |
    = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
            - impl<I> nom::error::ParseError<I> for ();
            - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
            - impl<I> nom::error::ParseError<I> for VerboseError<I>;
            - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `nom::character::complete::alphanumeric0`
   --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/character/complete.rs:558:28
    |
558 | pub fn alphanumeric0<T, E: ParseError<T>>(input: T) -> IResult<T, T, E>
    |                            ^^^^^^^^^^^^^ required by this bound in `alphanumeric0`

error[E0283]: type annotations needed
  --> src/php.rs:34:17
   |
34 |                 alphanumeric0::<_, _>, 
   |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
35 |                 tag(":")), 
   |                 --- type must be known at this point
   |
   = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
           - impl<I> nom::error::ParseError<I> for ();
           - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
           - impl<I> nom::error::ParseError<I> for VerboseError<I>;
           - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `nom::bytes::complete::tag`
  --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/bytes/complete.rs:32:29
   |
32 | pub fn tag<T, Input, Error: ParseError<Input>>(
   |                             ^^^^^^^^^^^^^^^^^ required by this bound in `tag`

error[E0283]: type annotations needed
  --> src/php.rs:34:17
   |
34 |                 alphanumeric0::<_, _>, 
   |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
...
37 |                 tag(":"), 
   |                 --- type must be known at this point
   |
   = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
           - impl<I> nom::error::ParseError<I> for ();
           - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
           - impl<I> nom::error::ParseError<I> for VerboseError<I>;
           - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `nom::bytes::complete::tag`
  --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/bytes/complete.rs:32:29
   |
32 | pub fn tag<T, Input, Error: ParseError<Input>>(
   |                             ^^^^^^^^^^^^^^^^^ required by this bound in `tag`

error[E0283]: type annotations needed
   --> src/php.rs:34:17
    |
34  |                 alphanumeric0::<_, _>, 
    |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
...
38  |                 delimited(
    |                 --------- type must be known at this point
    |
    = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
            - impl<I> nom::error::ParseError<I> for ();
            - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
            - impl<I> nom::error::ParseError<I> for VerboseError<I>;
            - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `nom::sequence::delimited`
   --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/sequence/mod.rs:172:36
    |
172 | pub fn delimited<I, O1, O2, O3, E: ParseError<I>, F, G, H>(
    |                                    ^^^^^^^^^^^^^ required by this bound in `delimited`

error[E0283]: type annotations needed
  --> src/php.rs:34:17
   |
34 |                 alphanumeric0::<_, _>, 
   |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
...
39 |                     tag("\""), 
   |                     --- type must be known at this point
   |
   = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
           - impl<I> nom::error::ParseError<I> for ();
           - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
           - impl<I> nom::error::ParseError<I> for VerboseError<I>;
           - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `nom::bytes::complete::tag`
  --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/bytes/complete.rs:32:29
   |
32 | pub fn tag<T, Input, Error: ParseError<Input>>(
   |                             ^^^^^^^^^^^^^^^^^ required by this bound in `tag`

error[E0283]: type annotations needed
   --> src/php.rs:34:17
    |
34  |                 alphanumeric0::<_, _>, 
    |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
...
40  |                     alphanumeric0, 
    |                     ------------- type must be known at this point
    |
    = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
            - impl<I> nom::error::ParseError<I> for ();
            - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
            - impl<I> nom::error::ParseError<I> for VerboseError<I>;
            - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `nom::character::complete::alphanumeric0`
   --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/character/complete.rs:558:28
    |
558 | pub fn alphanumeric0<T, E: ParseError<T>>(input: T) -> IResult<T, T, E>
    |                            ^^^^^^^^^^^^^ required by this bound in `alphanumeric0`

error[E0283]: type annotations needed
  --> src/php.rs:34:17
   |
34 |                 alphanumeric0::<_, _>, 
   |                 ^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `E` declared on the function `alphanumeric0`
...
41 |                     tag("\"")
   |                     --- type must be known at this point
   |
   = note: multiple `impl`s satisfying `_: nom::error::ParseError<&str>` found in the `nom` crate:
           - impl<I> nom::error::ParseError<I> for ();
           - impl<I> nom::error::ParseError<I> for (I, nom::error::ErrorKind);
           - impl<I> nom::error::ParseError<I> for VerboseError<I>;
           - impl<I> nom::error::ParseError<I> for nom::error::Error<I>;
note: required by a bound in `nom::bytes::complete::tag`
  --> /home/taylor/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nom-7.1.3/src/bytes/complete.rs:32:29
   |
32 | pub fn tag<T, Input, Error: ParseError<Input>>(
   |                             ^^^^^^^^^^^^^^^^^ required by this bound in `tag`

Some errors have detailed explanations: E0283, E0432.
For more information about an error, try `rustc --explain E0283`.
warning: `php-deserial` (bin "php-deserial") generated 5 warnings
error: could not compile `php-deserial` (bin "php-deserial") due to 11 previous errors; 5 warnings emitted
